@model CustomerViewModel

@{
    ViewData["Title"] = "Sales";
}

<h2>@ViewData["Title"]</h2>
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <form asp-action="Index" class="form-horizontal">

                <div class="form-group">
                    <label asp-for="Name" class="control-label col-lg-2"></label>
                    <div class="col-lg-3">
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <label asp-for="GenderId" class="control-label col-lg-2"></label>
                    <div class="col-lg-3">
                        <select asp-for="GenderId" class="form-control" asp-items="@(new SelectList(ViewBag.Genders,"Id","Name"))">
                            <option></option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="CityId" class="control-label col-lg-2"></label>
                    <div class="col-lg-3">
                        <select asp-for="CityId" class="form-control" asp-items="@(new SelectList(ViewBag.Cities,"Id","Name"))">
                            <option></option>
                        </select>
                    </div>
                    <label asp-for="RegionId" class="control-label col-lg-2"></label>
                    <div class="col-lg-3">
                        <select asp-for="RegionId" class="form-control" asp-items="@(new SelectList(ViewBag.Regions,"Id","Name"))">
                            <option></option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="ClassificationId" class="control-label col-lg-2"></label>
                    <div class="col-lg-3">
                        <select asp-for="ClassificationId" class="form-control" asp-items="@(new SelectList(ViewBag.Classifications,"Id","Name"))">
                            <option></option>
                        </select>
                    </div>
                    <label asp-for="UserSysId" class="control-label col-lg-2"></label>
                    <div class="col-lg-3">
                        <select asp-for="UserSysId" class="form-control" asp-items="@(new SelectList(ViewBag.UsersSys,"Id","Login"))">
                            <option></option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="DateStart" class="control-label col-lg-2"></label>
                    <div class="col-lg-3">
                        <input asp-for="DateStart" type="text" class="form-control datepicker" />
                    </div>
                    <label asp-for="DateFinish" class="control-label col-lg-2"></label>
                    <div class="col-lg-3">
                        <input asp-for="DateFinish" type="text" class="form-control datepicker" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-offset-2 col-lg-3">
                        <input type="submit" value="Filter" class="btn btn-primary" />
                        <a asp-action="Index" class="btn btn-warning">Clear Filter</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customers.First().Classification)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers.First().Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers.First().Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers.First().City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers.First().Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers.First().LastPurchase)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers.First().Login)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Customers)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Classification)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Region)
                </td>
                <td>
                    @(item.LastPurchase == null ? "" : Convert.ToDateTime(item.LastPurchase).ToShortDateString())
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Login)
                </td>
            </tr>
        }
    </tbody>
</table>
